# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load(":providers.bzl", "FuchsiaPackageResourceInfo")

def _fuchsia_package_resource_impl(ctx):
    if len(ctx.attr.dest) == 0:
        fail("dest must not be an empty string")

    return [
        FuchsiaPackageResourceInfo(src = ctx.files.src[0], dest = ctx.attr.dest),
        DefaultInfo(
            runfiles = ctx.runfiles(
                root_symlinks = {ctx.attr.dest: ctx.files.src[0]},
            ),
        ),
    ]

fuchsia_package_resource = rule(
    doc = """Declares a resource to be included in a Fuchsia package.

`src` can be a static file or something generated by another rule.
`dest` must be a path relative to /.

This rule can be added as a dependency of a fuchsia_package or a
dependency of a fuchsia_package and it will be added to the final
package contents.
""",
    implementation = _fuchsia_package_resource_impl,
    attrs = {
        "src": attr.label(
            doc = "The resource to include in the package.",
            mandatory = True,
            allow_single_file = True,
        ),
        "dest": attr.string(
            doc = "The path where this will be installed in the package.",
            mandatory = True,
        ),
    },
)
